; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
#default_envs = ESP32-2424S012C
#default_envs = ESP32-2424S012N
#default_envs = ESP32-2432S024C
#default_envs = ESP32-2432S024N
#default_envs = ESP32-2432S024R
#default_envs = ESP32-2432S028R
#default_envs = ESP32-2432S032C
#default_envs = ESP32-2432S032N
#default_envs = ESP32-2432S032R
#default_envs = ESP32-3248S035C
#default_envs = ESP32-3248S035R
#default_envs = ESP32-1732S019C
#default_envs = ESP32-1732S019N
#default_envs = ESP32-4827S043C
#default_envs = ESP32-4827S043N
#default_envs = ESP32-4827S043R
#default_envs = ESP32-8048S043C
#default_envs = ESP32-8048S043N
#default_envs = ESP32-8048S043R
#default_envs = ESP32-8048S050C
#default_envs = ESP32-8048S050N
#default_envs = ESP32-8048S050R
#default_envs = ESP32-8048S070C
#default_envs = ESP32-8048S070N

[env]
platform = espressif32
framework = arduino

monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0
monitor_filters = esp32_exception_decoder

# Partition scheme for OTA
board_build.partitions = min_spiffs.csv

build_flags =
    -Ofast
    #-Wall
    -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_VERBOSE
    # LVGL settings
    #-D LV_CONF_PATH=${PROJECT_INCLUDE_DIR}/lv_conf.h
    # EspressIf library defines
    -D ESP_LCD_ST7796_VER_MAJOR=1
    -D ESP_LCD_ST7796_VER_MINOR=2
    -D ESP_LCD_ST7796_VER_PATCH=0
    -D ESP_LCD_ILI9341_VER_MAJOR=1
    -D ESP_LCD_ILI9341_VER_MINOR=2
    -D ESP_LCD_ILI9341_VER_PATCH=0
    -D ESP_LCD_GC9A01_VER_MAJOR=1
    -D ESP_LCD_GC9A01_VER_MINOR=2
    -D ESP_LCD_GC9A01_VER_PATCH=0
    -D CONFIG_ESP_LCD_TOUCH_MAX_POINTS=1
    -D CONFIG_XPT2046_CONVERT_ADC_TO_COORDS
    -D CONFIG_XPT2046_Z_THRESHOLD=600

[env:ESP32-2424S012C]
board = ESP32-2424S012C
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-2424S012N]
board = ESP32-2424S012N
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-2432S024C]
board = ESP32-2432S024C
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-2432S024N]
board = ESP32-2432S024N
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-2432S024R]
board = ESP32-2432S024R
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-2432S028R]
board = ESP32-2432S024R
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-2432S032C]
board = ESP32-2432S032C
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-2432S032N]
board = ESP32-2432S032C
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-2432S032R]
board = ESP32-2432S032R
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-3248S035C]
board = ESP32-3248S035C
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-3248S035R]
board = ESP32-3248S035R
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-1732S019C]
board = ESP32-1732S019C
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-1732S019R]
board = ESP32-1732S019R
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-4827S043C]
board = ESP32-4827S043C
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-4827S043N]
board = ESP32-4827S043N
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-4827S043R]
board = ESP32-4827S043R
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-8048S043C]
board = ESP32-8048S043C
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-8048S043N]
board = ESP32-8048S043N
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-8048S043R]
board = ESP32-8048S043R
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-8048S050C]
board = ESP32-8048S050C
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-8048S050N]
board = ESP32-8048S050N
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-8048S050R]
board = ESP32-8048S050R
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-8048S070C]
board = ESP32-8048S070C
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}

[env:ESP32-8048S070N]
board = ESP32-8048S070N
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}